function e(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}const t=[{urls:"stun:stun.l.google.com:19302"}];function i(e,t,i="video"){if(t?.length>0&&"function"==typeof e?.getTransceivers&&"RTCRtpSender"in window&&"RTCRtpTransceiver"in window&&"getCapabilities"in window.RTCRtpSender&&"setCodecPreferences"in window.RTCRtpTransceiver.prototype){const s=e.getTransceivers().filter(e=>e?.sender?.track?.kind===i);if(!s.length)return;const n=RTCRtpSender.getCapabilities(i).codecs.filter(e=>t.includes(e.mimeType));if(!n.length)return;n.sort((e,i)=>t.indexOf(e.mimeType)-t.indexOf(i.mimeType)),s.forEach(e=>{e.setCodecPreferences(n)})}}class s extends EventTarget{constructor(e){super();const{driver:i,iceServers:s=t,verify:n,connectionTimeout:r=30,queueSize:o=10,audioBitrate:a,videoBitrate:d,audioCodecs:c,videoCodecs:h}=e||{};if(!i)throw new Error("Missing driver");this.driver=i,this.iceServers=s,this.verify=n,this.connectionTimeout=r,this.queueSize=o,this.audioBitrate=a,this.videoBitrate=d,this.audioCodecs=c,this.videoCodecs=h,this.connections=new Map,this.candidateQueues=new Map}get active(){return!!this._handler}start(t){if(this._handler)return;const{stream:s,room:n,state:r,dataChannel:o}=t||{};this.id=s?.id||e(),this.room=n||"default",this.state=r||{},this._handler=async e=>{const{type:t,id:n,candidate:r,answer:a,credentials:d}=e;if(t&&n&&n!==this.id)if("invoke"!==t){if("answer"===t&&a){const e=this.connections.get(n);if(!e)return;try{await e.peer.setRemoteDescription(new RTCSessionDescription(a))}catch(t){return void e.dispose(t)}if(this.candidateQueues.has(n)){for(const t of this.candidateQueues.get(n))try{await e.peer.addIceCandidate(new RTCIceCandidate(t))}catch(e){this.dispatchEvent(new CustomEvent("error",{detail:{id:n,error:e}}))}this.candidateQueues.delete(n)}return}if("candidate"===t&&r){const e=this.connections.get(n);if(!e)return this.candidateQueues.has(n)||this.candidateQueues.set(n,[]),void this.candidateQueues.get(n).push(r);try{await e.peer.addIceCandidate(new RTCIceCandidate(r))}catch(e){this.dispatchEvent(new CustomEvent("error",{detail:{id:n,error:e}}))}return}}else{if(this.connections.has(n))return;if(this.verify){if(!await this.verify(n,d))return}try{const e={id:n,peer:new RTCPeerConnection({iceServers:this.iceServers}),dispose:i=>{clearTimeout(t),this.connections.delete(n),e.channel?.close(),e.peer?.close(),this.driver.emit(["receiver",this.room,n],{type:"dispose",id:this.id,state:this.state}),this.dispatchEvent(new CustomEvent("dispose",{detail:{id:n,peer:e.peer,error:i}}))},queue:[]};this.connections.set(n,e);const t=this.connectionTimeout>0&&setTimeout(()=>e.dispose(new Error("Connection timeout")),1e3*this.connectionTimeout);e.peer.addEventListener("iceconnectionstatechange",i=>{const{iceConnectionState:s}=i.target;switch(s){case"connected":clearTimeout(t),this.dispatchEvent(new CustomEvent("connect",{detail:{id:n,peer:e.peer}}));break;case"disconnected":e.dispose();break;case"failed":e.dispose(new Error("ICE connection failed"))}}),e.peer.addEventListener("icecandidate",e=>{e?.candidate&&this.driver.emit(["receiver",this.room,n],{type:"candidate",id:this.id,candidate:e.candidate})}),s&&(s.getTracks().forEach(t=>e.peer.addTrack(t,s)),function(e,t,i){if("function"==typeof e?.getSenders&&"RTCRtpSender"in window&&"getParameters"in window.RTCRtpSender.prototype&&"setParameters"in window.RTCRtpSender.prototype){const s={audio:0|t,video:0|i};e.getSenders().forEach(e=>{const t=s[e?.track.kind];if(!t)return;const i=e.getParameters();i.encodings||(i.encodings=[]);for(let e=0;e<i.encodings.length;e++){const s=i.encodings[e];s&&(s.maxBitrate=1e3*t)}e.setParameters(i)})}}(e.peer,this.audioBitrate,this.videoBitrate),i(e.peer,this.videoCodecs,"video"),i(e.peer,this.audioCodecs,"audio")),s&&!o||(e.channel=e.peer.createDataChannel(n),e.channel.addEventListener("open",()=>{for(;e.queue.length;){const t=e.queue.shift();e.channel.send(t)}},{once:!0}));const r=await e.peer.createOffer({offerToReceiveAudio:!!s&&s.getAudioTracks().length>0,offerToReceiveVideo:!!s&&s.getVideoTracks().length>0,iceRestart:!1});await e.peer.setLocalDescription(r),this.driver.emit(["receiver",this.room,n],{type:"offer",id:this.id,offer:r,state:this.state})}catch(e){const t=this.connections.get(n);t?t.dispose(e):this.dispatchEvent(new CustomEvent("error",{detail:{id:n,error:e}}))}}},this.driver.on(["sender",this.room],this._handler),this.driver.on(["sender",this.room,this.id],this._handler),this.driver.emit(["receiver",this.room],{type:"invoke",id:this.id})}stop(){if(this._handler){this.driver.off(["sender",this.room],this._handler),this.driver.off(["sender",this.room,this.id],this._handler);for(const e of this.connections.values())e.dispose();this.connections.clear(),this.candidateQueues.clear(),delete this._handler}}send(e,t){const i=(e,t)=>{"open"===e.channel?.readyState?e.channel.send(t):(e.queue.push(t),e.queue.length>this.queueSize&&e.queue.shift())};if(t){const s=this.connections.get(t);s&&i(s,e)}else for(const t of this.connections.values())i(t,e)}sync(e,t){t&&Object.assign(this.state,e);for(const e of this.connections.keys())this.driver.emit(["receiver",this.room,e],{type:"sync",id:this.id,state:this.state})}}class n extends EventTarget{constructor(e){super();const{driver:i,iceServers:s=t,connectionTimeout:n=30,pingInterval:r=30,pingAttempts:o=10}=e||{};if(!i)throw new Error("Missing driver");this.driver=i,this.iceServers=s,this.connectionTimeout=n,this.pingInterval=r,this.pingAttempts=o,this.connections=new Map,this.candidateQueues=new Map}get active(){return!!this._handler}start(t){if(this._handler)return;const{room:i,credentials:s}=t||{};this.id=e(),this.room=i||"default",this._handler=async e=>{const{type:t,id:i,offer:n,candidate:r,state:o}=e;if(t&&i&&this.id!==i)if("invoke"!==t)if("offer"===t&&n){if(this.connections.has(i))return;try{const e={id:i,peer:new RTCPeerConnection({iceServers:this.iceServers}),state:o,dispose:s=>{clearTimeout(t),this.connections.delete(i),e.channel?.close(),e.peer?.close(),this.dispatchEvent(new CustomEvent("dispose",{detail:{id:i,peer:e.peer,error:s,state:e.state}}))}};this.connections.set(i,e);const t=this.connectionTimeout>0&&setTimeout(()=>e.dispose(new Error("Connection timeout")),1e3*this.connectionTimeout);if(e.peer.addEventListener("iceconnectionstatechange",s=>{const{iceConnectionState:n}=s.target;switch(n){case"connected":clearTimeout(t),this.dispatchEvent(new CustomEvent("connect",{detail:{id:i,peer:e.peer,state:e.state}}));break;case"disconnected":e.dispose();break;case"failed":e.dispose(new Error("ICE connection failed"))}}),e.peer.addEventListener("icecandidate",e=>{e?.candidate&&this.driver.emit(["sender",this.room,i],{type:"candidate",id:this.id,candidate:e.candidate})}),e.peer.addEventListener("datachannel",t=>{e.channel||(e.channel=t.channel,e.channel.addEventListener("open",()=>{this.dispatchEvent(new CustomEvent("channel",{detail:{id:i,peer:e.peer,channel:e.channel,state:e.state}}))},{once:!0}),e.channel.addEventListener("message",t=>{const{data:s}=t;this.dispatchEvent(new CustomEvent("message",{detail:{id:i,peer:e.peer,message:s,state:e.state}}))}))},{once:!0}),e.peer.addEventListener("track",t=>{e.stream||(e.stream=t.streams[0],this.dispatchEvent(new CustomEvent("stream",{detail:{id:i,peer:e.peer,stream:e.stream,state:e.state}})))},{once:!0}),await e.peer.setRemoteDescription(new RTCSessionDescription(n)),this.candidateQueues.has(i)){for(const t of this.candidateQueues.get(i))try{await e.peer.addIceCandidate(new RTCIceCandidate(t))}catch(e){this.dispatchEvent(new CustomEvent("error",{detail:{id:i,error:e}}))}this.candidateQueues.delete(i)}await e.peer.setLocalDescription(await e.peer.createAnswer()),this.driver.emit(["sender",this.room,i],{type:"answer",id:this.id,answer:e.peer.localDescription})}catch(e){const t=this.connections.get(i);t?t.dispose(e):this.dispatchEvent(new CustomEvent("error",{detail:{id:i,error:e}}))}}else{if("candidate"===t&&r){const e=this.connections.get(i);if(!e)return this.candidateQueues.has(i)||this.candidateQueues.set(i,[]),void this.candidateQueues.get(i).push(r);try{await e.peer.addIceCandidate(new RTCIceCandidate(r))}catch(e){this.dispatchEvent(new CustomEvent("error",{detail:{id:i,error:e}}))}return}if("sync"===t){const e=this.connections.get(i);if(!e)return;return e.state=o,void this.dispatchEvent(new CustomEvent("sync",{detail:{id:i,peer:e.peer,state:e.state}}))}if("dispose"===t){const e=this.connections.get(i);if(!e)return;return void e.dispose()}}else{if(this.connections.has(i))return;this.driver.emit(["sender",this.room,i],{type:"invoke",id:this.id,credentials:s})}},this.driver.on(["receiver",this.room],this._handler),this.driver.on(["receiver",this.room,this.id],this._handler),this.driver.emit(["sender",this.room],{type:"invoke",id:this.id,credentials:s}),this._ping=0,this._timer=setInterval(()=>{this.connections.size>0&&(this._ping=this.pingAttempts),this._ping>0&&(this._ping--,this.driver.emit(["sender",this.room],{type:"invoke",id:this.id,credentials:s}))},1e3*this.pingInterval)}stop(){if(this._handler){clearInterval(this._timer),delete this._timer,this.driver.off(["receiver",this.room],this._handler),this.driver.off(["receiver",this.room,this.id],this._handler);for(const e of this.connections.values())e.dispose();this.connections.clear(),this.candidateQueues.clear(),delete this._handler}}}export{n as Receiver,s as Sender};
